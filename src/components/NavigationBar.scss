@use "Styles/mixins";
@use "Styles/variables" as *;

a {
  color: $color-navbar-fg;
  text-decoration: none;
  white-space: nowrap;
}

#container {
  position: sticky;
  top: 0px;

  display: flex;
  flex-direction: column;
  align-items: end;

  width: 100%;

  padding: $navbar-padding;
  box-sizing: border-box;

  background-color: $color-navbar-bg;

  transition: background-color 250ms ease;

  &[data-hamburger] {
    position: fixed;

    height: 100vh;

    #entries {
      flex-direction: column;
      align-items: end;
    }

    #hamburger {
      display: block;
    }

    &:not([data-expanded]) {
      background: transparent;

      // Otherwise the collapsed hamburger menu prevents interacting with
      // elements under it.
      pointer-events: none;

      #entries {
        // If we use display: none, we can't know the width of each entry.
        // Knowing their widths is necessary to know whether to use a navbar or
        // a hamburger menu.
        visibility: hidden;
      }
    }
  }
}

#entries {
  width: 100%;

  top: 0px;
  position: sticky;

  display: flex;
  justify-content: center;
  gap: $navbar-gap;

  text-transform: uppercase;
  font-size: $navbar-font-size;
}

#hamburger {
  display: none;

  margin-bottom: $margin-regular;

  // Because we use pointer-events: none in the parent
  pointer-events: auto;
}

#resize-helper {
  width: 100%;
  height: 0px;
}

[data-current] a {
  pointer-events: none;

  &::after {
    @include mixins.glow-primary;

    content: " ";

    display: block;

    width: 100%;
    height: 5px;

    border-radius: 2.5px;

    background-color: $color-navbar-selected;
  }
}
