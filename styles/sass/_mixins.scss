@use "sass:map";
@use "sass:color";

@use "colors";
@use "mixins_internal";

/* --------------------------------- Mixins --------------------------------- */

// Gives the element full viewport height
@mixin full-viewport-h() {
  height: 100vh;
}

// Gives the element full viewport width
@mixin full-viewport-w() {
  width: 100vw;
}

// Centers the element's text
@mixin text-center {
  text-align: center;
}

// Gives the element's background a default color
@mixin bg-default {
  mixins_internal.$bg-color-current: colors.$bg;
  background-color: colors.$bg;
}

// Gives the element's background a less subtle color
@mixin bg-fg {
  mixins_internal.$bg-color-current: colors.$fg;
  background-color: colors.$fg;
}

// Colors the element with a neutral text color
@mixin color-text {
  color: colors.$text;
}

// Styles the element as a link
@mixin link {
  color: colors.$link;

  &:hover {
    color: colors.$link-hover;
  }
}

// Gives the element the same background as a box
@mixin box-bg {
  @include bg-fg;
}

// Gives the element a curved box look
@mixin box {
  @include box-bg;

  border-radius: 12px;
  border: 1px solid colors.$fg;
  box-shadow: 0 0 0.25rem #000f, 0 0 1rem #0005;
}

// Makes an element translucent. $color doesn't need to be specified if one of
//  the following mixins are used:
//  - box
//  - bg-*
@mixin translucent(
  $color: mixins_internal.$bg-color-current,
  $alpha-scale: -75%
) {
  background-color: color.scale($color, $alpha: $alpha-scale);
  backdrop-filter: blur(4px);
}
